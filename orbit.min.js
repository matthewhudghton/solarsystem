const startTime = 1713299099; function parseIntString(e) { let i = "", o = ""; for (let t = 0; t < e.length; t++)(e.length - 1 - t) % 2 == 0 ? i += e[t] : o += e[t]; return (0 == i.length ? 0 : parseInt(i, 31)) + (0 == o.length ? 0 : -parseInt(o, 31)) } function setTime(e) { document.getElementById("dateInput").value = e } function setCoordinates(e, i) { document.getElementById("xCoordInput").value = e, document.getElementById("yCoordInput").value = i } window.addEventListener("load", function() { const e = document.getElementById("orbitCanvas"), i = e.getContext("2d"), o = e.width, t = e.height, n = o / 2, a = t / 2, r = [{ name: "Aballon", size: 10, color: "blue", fontSize: 20, orbit: { a: 100, b: 90, period: 88, initialPhase: 1.2345, moons: [{ name: "", size: 3, color: "gray", fontSize: 8, orbit: { a: 15, b: 13, period: 15, initialPhase: 2.3456 } }] } }, { name: "Castrovel", size: 12, color: "green", fontSize: 20, orbit: { a: 150, b: 130, period: 225, initialPhase: 3.4567, moons: [{ name: "", size: 4, color: "gray", fontSize: 8, orbit: { a: 20, b: 18, period: 20, initialPhase: 4.5678 } }, { name: "", size: 3, color: "gray", fontSize: 8, orbit: { a: 25, b: 22, period: 30, initialPhase: 5.6789 } }] } }, { name: "Golarion", size: 14, color: "cyan", fontSize: 20, orbit: { a: 200, b: 180, period: 365, initialPhase: 6.789, moons: [{ name: "Moon", size: 4, color: "gray", fontSize: 8, orbit: { a: 40, b: 40, period: 27, initialPhase: .1234 } }] } }, { name: "Sky Ring 1", size: 14, color: "gray", fontSize: 20, orbit: { a: 70, b: 50, period: 365, initialPhase: 6.789, moons: [] } }, { name: "Sky Ring 2", size: 14, color: "gray", fontSize: 20, orbit: { a: 160, b: 70, period: 565, initialPhase: 6.789, moons: [] } }, { name: "Sky Ring 3", size: 14, color: "gray", fontSize: 20, orbit: { a: 50, b: 150, period: 765, initialPhase: 6.789, moons: [] } }, { name: "Akiton", size: 10, color: "red", fontSize: 20, orbit: { a: 250, b: 240, period: 687, initialPhase: 1.2345, moons: [{ name: "", size: 5, color: "gray", fontSize: 8, orbit: { a: 30, b: 28, period: 25, initialPhase: 2.3456 } }] } }, { name: "Verces", size: 8, color: "purple", fontSize: 20, orbit: { a: 300, b: 270, period: 760, initialPhase: 3.4567, moons: [{ name: "", size: 4, color: "gray", fontSize: 8, orbit: { a: 25, b: 23, period: 30, initialPhase: 4.5678 } }, { name: "", size: 3, color: "gray", fontSize: 8, orbit: { a: 35, b: 30, period: 40, initialPhase: 5.6789 } }] } }, { name: "The Diaspora", size: 2, color: "gray", fontSize: 20, orbit: { a: 320, b: 270, period: 760, initialPhase: 1.4567, moons: [{ name: "", size: 4, color: "gray", fontSize: 8, orbit: { a: 25, b: 23, period: 130, initialPhase: 1.5678 } }, { name: "", size: 4, color: "gray", fontSize: 8, orbit: { a: 15, b: 23, period: 130, initialPhase: 4.5678 } }, { name: "", size: 4, color: "gray", fontSize: 8, orbit: { a: 25, b: 33, period: 170, initialPhase: 2.5678 } }, { name: "", size: 4, color: "gray", fontSize: 8, orbit: { a: 25, b: 13, period: 130, initialPhase: 4.5678 } }, { name: "", size: 4, color: "gray", fontSize: 8, orbit: { a: 25, b: 26, period: 110, initialPhase: 8.5678 } }, { name: "", size: 4, color: "gray", fontSize: 8, orbit: { a: 15, b: 13, period: 230, initialPhase: 4.5678 } }, { name: "", size: 4, color: "gray", fontSize: 8, orbit: { a: 25, b: 53, period: 335, initialPhase: 9.5678 } }, { name: "", size: 3, color: "gray", fontSize: 8, orbit: { a: 25, b: 30, period: 221, initialPhase: 1.6789 } }] } }, { name: "Eox", size: 7, color: "gray", fontSize: 20, orbit: { a: 350, b: 320, period: 850, initialPhase: 6.789, moons: [{ name: "", size: 4, color: "gray", fontSize: 8, orbit: { a: 28, b: 26, period: 35, initialPhase: .1234 } }, { name: "", size: 2, color: "gray", fontSize: 8, orbit: { a: 40, b: 38, period: 50, initialPhase: 1.2345 } }, { name: "", size: 3, color: "gray", fontSize: 8, orbit: { a: 145, b: 143, period: 55, initialPhase: 2.3456 } }] } }, { name: "Triaxus", size: 9, color: "orange", fontSize: 20, orbit: { a: 400, b: 350, period: 1e3, initialPhase: 3.4567, moons: [{ name: "", size: 5, color: "gray", fontSize: 8, orbit: { a: 40, b: 37, period: 60, initialPhase: 4.5678 } }] } }, { name: "Liavara", size: 30, color: "orange", fontSize: 20, orbit: { a: 450, b: 400, period: 1100, initialPhase: 5.6789, moons: [{ name: "", size: 5, color: "gray", fontSize: 8, orbit: { a: 35, b: 30, period: 55, initialPhase: 6.789 } }, { name: "", size: 4, color: "gray", fontSize: 8, orbit: { a: 45, b: 40, period: 65, initialPhase: .1234 } }] } }, { name: "Bretheda", size: 37, color: "blue", fontSize: 20, orbit: { a: 500, b: 450, period: 1200, initialPhase: 1.2345, moons: [{ name: "", size: 6, color: "gray", fontSize: 8, orbit: { a: 50, b: 48, period: 70, initialPhase: 2.3456 } }, { name: "", size: 5, color: "gray", fontSize: 8, orbit: { a: 60, b: 55, period: 80, initialPhase: 3.4567 } }, { name: "", size: 4, color: "gray", fontSize: 8, orbit: { a: 170, b: 165, period: 90, initialPhase: 4.5678 } }] } }, { name: "Apostae", size: 8, color: "brown", fontSize: 20, orbit: { a: 350, b: 500, period: 1300, initialPhase: 5.6789, moons: [{ name: "", size: 4, color: "gray", fontSize: 8, orbit: { a: 30, b: 27, period: 40, initialPhase: 6.789 } }, { name: "", size: 3, color: "gray", fontSize: 8, orbit: { a: 35, b: 30, Period: 50, initialPhase: .1234 } }, { name: "", size: 2, color: "gray", fontSize: 8, orbit: { a: 45, b: 40, period: 60, initialPhase: 1.2345 } }, { name: "", size: 1, color: "gray", fontSize: 8, orbit: { a: 155, b: 120, period: 70, initialPhase: 2.3456 } }, { name: "", size: 1, color: "gray", fontSize: 8, orbit: { a: 160, b: 155, period: 75, initialPhase: 3.4567 } }] } }, { name: "Aucturn", size: 14, color: "purple", fontSize: 20, orbit: { a: 600, b: 350, period: 1400, initialPhase: 4.5678, moons: [{ name: "", size: 4, color: "gray", fontSize: 8, orbit: { a: 30, b: 28, period: 45, initialPhase: 5.6789 } }] } }]; let s = !0, l = .1, c = startTime, m = 0, d = 0, b = !1; function f(e, o, t) { i.beginPath(), i.lineWidth = 1; for (let r = 0; r <= 2 * Math.PI; r += .01) { const s = e * Math.cos(r + t), l = o * Math.sin(r + t); i.lineTo(n + s, a + l) } i.strokeStyle = "lightgray", i.stroke() } function h(e, o, t, r, s, l, c) { if (c) { const s = t, l = 3; i.beginPath(), i.arc(n + e, a + o, s, 0, 2 * Math.PI), i.arc(n + e, a + o, s - l, 0, 2 * Math.PI, !0), i.fillStyle = r, i.fill() } else i.beginPath(), i.arc(n + e, a + o, t, 0, 2 * Math.PI), i.fillStyle = r, i.fill(); i.font = b ? `${l}px  'Trajan Pro', serif` : `${l}px Iokharic, sans-serif`, i.fillStyle = "white", i.fillText(s, n + e + t, a + o + t) } function z(e, i, o, t, n) { const a = 2 * Math.PI * t / (60 * o * 60 * 24) + n; return { x: e * Math.cos(a), y: i * Math.sin(a) } } let g = performance.now(); const p = 1e3 / 60; function u(e) { s && (c += e * l), function(e) { i.fillStyle = "rgb(0,0,0)", i.fillRect(0, 0, o, t), i.beginPath(), i.arc(n, a, 100, 0, 2 * Math.PI), i.fillStyle = "yellow", i.fill(); for (const i of r) { let { a: o, b: t, period: n, initialPhase: a, moons: r } = i.orbit; const s = 3; f(o *= s, t *= s, a); const { x: l, y: c } = z(o, t, n, e, a); if (h(l, c, i.size, i.color, i.name, i.fontSize, -1 != i.name.indexOf("Ring")), r) for (const i of r) { const { a: o, b: t, period: n, initialPhase: a } = i.orbit, { x: r, y: s } = z(o, t, n, e, a); h(l + r, c + s, i.size, i.color, i.name, i.fontSize) } } }(c), function(e, o) { if (0 == e && 0 == o) return; const t = r.find(e => "Golarion" === e.name); if (t) { const { a: r, b: s, period: l, initialPhase: m } = t.orbit, { x: d, y: b } = z(3 * r, 3 * s, l, c, m); i.beginPath(), i.moveTo(n + d, a + b), i.lineTo(e + n, o + a), i.lineWidth = 5, i.strokeStyle = "purple", i.stroke() } }(m, d), function(e) { const i = e, o = new Date(1e3 * i).toUTCString(); document.getElementById("timeDisplay").innerHTML = `Timestamp: ${i}<br>UTC Datetime: ${o}` }(c), requestAnimationFrame(u) } !function(e) { const i = performance.now(); let o = i - g; for (u(0); o >= p;)u(o), o = i - (g += p) }(), document.getElementById("rewind-button").addEventListener("click", function() { l >= 0 && (l = 1), l *= 2, l = Math.min(l, -1) }), document.getElementById("slower-button").addEventListener("click", function() { l = l >= 0 ? Math.max(Math.floor(l / 2), .01) : Math.min(Math.floor(l / 2), -.01) }), document.getElementById("faster-button").addEventListener("click", function() { l <= 0 && (l = 1), l = Math.ceil(2 * l), l = Math.max(l, 1) }), document.getElementById("goToDateButton").addEventListener("click", function() { const e = parseInt(document.getElementById("dateInput").value); isNaN(e) || (c = e) }), document.getElementById("goToCoordinatesButton").addEventListener("click", function() { const e = parseInt(document.getElementById("xCoordInput").value), i = parseInt(document.getElementById("yCoordInput").value); isNaN(e) || isNaN(i) || (m = e, d = i) }), e.addEventListener("click", function(i) { const o = e.getBoundingClientRect(), t = i.clientX - o.left - n, r = i.clientY - o.top - a; console.log("Relative X:", t, "Relative Y:", r) }), document.getElementById("dragonTextBox").addEventListener("input", function(e) { !function(e) { e.length > 0 && e.startsWith("!") ? (e = e.slice(1), b = !0, document.getElementById("dragonTextBox").style.fontFamily = "'Trajan Pro', serif", document.getElementById("timeDisplay").style.fontFamily = "'Trajan Pro', serif") : (b = !1, document.getElementById("dragonTextBox").style.fontFamily = "Iokharic, sans-serif", document.getElementById("timeDisplay").style.fontFamily = "Iokharic, sans-serif"); const i = e.split(/[v-zV-Z]/); if (i.length < 1) return 0; inputTime = parseIntString(i[0]), isNaN(inputTime) || (setTime(c = startTime + inputTime), s = !1, u(0), i.length > 2 ? (x = parseIntString(i[1]), y = parseIntString(i[2]), setCoordinates(x, y), m = x, d = y) : (m = 0, d = 0)) }(e.target.value) }), document.getElementById("playPauseButton").addEventListener("click", function() { s = !s }); const P = function(e, i, o, t) { for (const n of e) { const { a: e, b: a, period: r, initialPhase: s, moons: l } = n.orbit, { x: c, y: m } = z(e, a, r, i, s); if (Math.abs(c - o) < 1e-6 && Math.abs(m - t) < 1e-6) return n.name; if (l) for (const e of l) { const { a: a, b: r, period: s, initialPhase: l } = e.orbit, { x: d, y: b } = z(a, r, s, i, l), f = c + d, h = m + b; if (Math.abs(f - o) < 1e-6 && Math.abs(h - t) < 1e-6) return `${e.name} of ${n.name}` } } return null }(r, 365, 200, 0); P ? console.log(`At time 365s, ${P} is at (200,0)`) : console.log("No planet is at (200,0) at time 365s") });
